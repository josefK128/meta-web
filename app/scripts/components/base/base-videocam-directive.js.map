{"version":3,"names":[],"mappings":"","sources":["components/base/base-videocam-directive.js"],"sourcesContent":["// * base-videocam-directive.js\n// * displays the webcam on the base background html plane (z-index 0)\n// * NOTE: can be used for augmented reality applications and, if embellished,\n//   for shared layered worlds and webrtc media communications\n//\n// * @dependencies: none<br>\n//   @param {services/mediator-service} Mediator<br>\n//   @param {services/log-service} Log<br>\n//   @ngInject\n//\n// * NOTE: ngInject is used by ngAnnotate to generate a \n//   minification-safe injection annotation such as:\n//   ```function($scope) => ['$scope', function($scope){}]```\n\n\nangular.module('app').directive(\"baseVideocam\", [\"Mediator\", \"Log\", function(Mediator, Log){\n  \"use strict\";\n\n  var log = Log.log;\n\n\n  class Videocam {\n    constructor(){\n      this.id=\"videocam\";\n    }//ctor\n  }\n\n\n  // return DDO\n  return {\n    restrict: 'EA',\n    scope: 'false',\n    replace: 'false',\n    templateNamespace: 'html',\n    controller: Videocam,\n    controllerAs: 'videocam',\n    bindToController: true,\n    link: (scope, elem, attrs, videocam) => {\n\n\n      // root id from model\n      videocam.id = attrs.id;                       \n     \n      // register component controller\n      Mediator.component(videocam.id, videocam);\n\n      // connect videocam<br>\n      // Grab elements, create settings, etc.\n      var video = document.getElementById(\"video\"),\n          videoObj = { \"video\": true },\n          errBack = function(error) {\n          };\n\n      // diagnostics\n  \n      // Put video listeners into place\n      if(navigator.getUserMedia) { // Standard\n        navigator.getUserMedia(videoObj, function(stream) {\n          video.src = stream;\n          video.play();\n        }, errBack);\n      } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed\n        navigator.webkitGetUserMedia(videoObj, function(stream){\n          video.src = window.URL.createObjectURL(stream);\n          video.play();\n        }, errBack);\n      }\n      else if(navigator.mozGetUserMedia) { // Firefox-prefixed\n        navigator.mozGetUserMedia(videoObj, function(stream){\n          video.src = window.URL.createObjectURL(stream);\n          video.play();\n        }, errBack);\n      }\n    }//link-f\n  };//return DDO\n}]);\n\n"],"file":"components/base/base-videocam-directive.js","sourceRoot":"/source/"}