// produced in DOM:
<div ng-style="{background: disk.bgcolor}" 
     id="disk7" bgcolor="narrative.bgcolor" 
     class="ng-scope ng-binding" 
     style="background: yellow;">
       <input type="text" 
              ng-model="disk.msg" 
              ng-change="disk.msg_changed()" 
              class="ng-pristine ng-untouched ng-valid">
                msg: msg d.bgcolor: yellow n.bgcolor: yellow   </div>

// directive
<i2d-disk id="disk7" bgcolor='narrative.bgcolor' >initial directive</i2d-disk><br/><br/>

// return directive definition object - DDO
  return {
    restrict: 'E',      // element
    replace: true,      // replace <i2d-disk> with compiled template

    templateNamespace: 'html',
    // NOTE!: as of 4/15 ng-include NO LONGER inits $templateCache ?! -->
    //template: $templateCache.get('expt'), // via $templateCache - FAILS
    // NOTE: attrs in directive are copied into the template
    // WARNING!: same-name attributes of the directive are concatenated
    // onto the values in the same-name attribute of the template
    // BEST: keep attribute names in directive and template mutually disjoint
    //
    // NOTE: only the <i2d-disdk> directive references the parent scope
    // the user of the directive decides on the association of 'bgcolor' (exp)
    // with an attribute on the parent scope
    // NOTE: the template only references the child scope component controller
    // NOTE $parent.narrative.bgcolor diagnostic reference is needed for only
    // for isolate scope {} - if scope: true can refer simply to
    // narrative.bgcolor
    template: "<div ng-style='{background: disk.bgcolor}' >" +
      "<input type='text' ng-model='disk.msg' ng-change='disk.msg_changed()'>" +
       "msg: {{disk.msg}} d.bgcolor: {{disk.bgcolor}} n.bgcolor: {{$parent.narrative.bgcolor}}" +
       "</div>",
  
    // to use bindToC scope must be isolated ({}) or child (true)
    // NOTE: can be either but if isolated {} then diagnostic to reference 
    // narrative.bgcolor must be $parent.narrative.bgcolor
    // NOTE: $parent.narrative.bgcolor works for both {} and child scoping
    // so only the scope value needs to change to switch between isolated and 
    // child scope name inheritance
    scope: {},        
    controller: Disk,      // instance of Class-ctor Disk
    controllerAs: 'disk',  // standard name for component controller instance
                           // i2d-name-directive => Name (ctrl class) -> 'name'

    // binds specified scope-references used by template properties
    // use same name in template parent controller and child controller
    // '=' => properties are 'double-bound' between controllers and template
    // '@' => parent properties are written to the template' 
    //        but there is no sync between controllers p->ch or ch->p
    // id and foo are defined in the directive
    // bgcolor is defined in the controller constructor
    bindToController: {
      bgcolor: '='         
    },

