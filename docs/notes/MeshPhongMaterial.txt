Constructor

MeshPhongMaterial(parameters)

parameters -- an object with one or more of the material's properties defining the its appearance.
color — geometry color in hexadecimal. Default is 0xffffff.
map — Sets the texture map. Default is null 
lightMap — Set light map. Default is null.
specularMap — Set specular map. Default is null.
alphaMap — Set alpha map. Default is null.
envMap — Set env map. Default is null.
fog — Define whether the material color is affected by global fog settings. Default is true.
shading — Define shading type. Default is THREE.SmoothShading.
wireframe — render geometry as wireframe. Default is false.
wireframeLinewidth — Line thickness. Default is 1.
wireframeLinecap — Define appearance of line ends. Default is 'round'.
wireframeLinejoin — Define appearance of line joints. Default is 'round'.
vertexColors — Define how the vertices gets colored. Default is THREE.NoColors.
skinning — Define whether the material uses skinning. Default is false.
morphTargets — Define whether the material uses morphTargets. Default is false.
Example:
materials.push( new THREE.MeshPhongMaterial( { color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading } ) );
Properties

See the base Material class for common parameters.
# .color

Diffuse color of the material. Default is white.
# .emissive

Emissive (light) color of the material, essentially a solid color unaffected by other lighting. Default is black.
# .specular

Specular color of the material, i.e., how shiny the material is and the color of its shine. Setting this the same color as the diffuse value (times some intensity) makes the material more metallic-looking; setting this to some gray makes the material look more plastic. Default is dark gray.
# .shininess

How shiny the specular highlight is; a higher value gives a sharper highlight. Default is 30. It should not be set to 0.
# .metal

If set to true the shader multiplies the specular highlight by the underlying color of the object, making it appear to be more metal-like and darker. If set to false the specular highlight is added ontop of the underlying colors.
# .wrapAround

Define whether the diffuse lighting wraps around the model or not. This option adds a little more (tintable) light onto the side of the object in relation to a light.
# .wrapRGB

Decide how much of the wrap around values get used if the wrapAround option is set. The x, y, z values correspond to the r, g, b values respectively. The typical range is of each is from 0 to 1. For example setting all of the vector values to 0.5 will add a moderate amount of light to the side of the model. Changing b to 1 will tint the light on the side to be more blue. Defaults to (1,1,1).
# .map

Set color texture map. Default is null.
# .lightMap

Set light map. Default is null.
# .bumpMap

The texture to create a bump map. The black and white values map to the perceived depth in relation to the lights. Bump doesn't actually affect the geometry of the object, only the lighting. If a normal map is defined this will be ignored.
# .bumpScale

How much the bump map affects the material. Typical ranges are 0-1. Default is 1.
# .normalMap

The texture to create a normal map. The RGB values affect the surface normal for each pixel fragment and change the way the color is lit. Normal maps do not change the actual shape of the surface, only the lighting.
# .normalScale

How much the normal map affects the material. Typical ranges are 0-1. Default is (1,1).
# .specularMap

The specular map value affects both how much the specular surface highlight contributes and how much of the environment map affects the surface. Default is null.
# .alphaMap

The alpha map is a grayscale texture that controls the opacity across the surface (black: fully transparent; white: fully opaque). Default is null.
Only the color of the texture is used, ignoring the alpha channel if one exists. For RGB and RGBA textures, the WebGL renderer will use the green channel when sampling this texture due to the extra bit of precision provided for green in DXT-compressed and uncompressed RGB 565 formats. Luminance-only and luminance/alpha textures will also still work as expected.
# .envMap

Set env map. Default is null.
# .combine

How to combine the result of the surface's color with the environment map, if any.
Options are THREE.MultiplyOperation (default), THREE.MixOperation, THREE.AddOperation. If mix is chosen, the reflectivity is used to blend between the two colors.
# .reflectivity

How much the environment map affects the surface; also see "combine".
# .refractionRatio

The index of refraction for an environment map using THREE.CubeRefractionMapping. Default is 0.98.
# .fog

Define whether the material color is affected by global fog settings. Default is true.
This setting might not have any effect when used with certain renderers. For example, it is ignored with the Canvas renderer, but does work with the WebGL renderer.
# .shading

How the triangles of a curved surface are rendered: as a smooth surface, as flat separate facets, or no shading at all.
Options are THREE.SmoothShading (default), THREE.FlatShading, THREE.NoShading.
# .wireframe

Whether the triangles' edges are displayed instead of surfaces. Default is false.
# .wireframeLinewidth

Line thickness for wireframe mode. Default is 1.0.
Due to limitations in the ANGLE layer, on Windows platforms linewidth will always be 1 regardless of the set value.
# .wireframeLinecap

Define appearance of line ends. Possible values are "butt", "round" and "square". Default is 'round'.
This setting might not have any effect when used with certain renderers. For example, it is ignored with the WebGL renderer, but does work with the Canvas renderer.
# .wireframeLinejoin

Define appearance of line joints. Possible values are "round", "bevel" and "miter". Default is 'round'.
This setting might not have any effect when used with certain renderers. For example, it is ignored with the WebGL renderer, but does work with the Canvas renderer.
# .vertexColors

Define how the vertices gets colored. Possible values are THREE.NoColors, THREE.FaceColors and THREE.VertexColors. Default is THREE.NoColors.
This setting might not have any effect when used with certain renderers. For example, it is ignored with the Canvas renderer, but does work with the WebGL renderer.
# .skinning

Define whether the material uses skinning. Default is false.
# .morphTargets

Define whether the material uses morphTargets. Default is false.
# .morphNormals

Defines whether the material uses morphNormals. Set as true to pass morphNormal attributes from the Geometry to the shader. Default is false.
Methods


