{"version":3,"names":[],"mappings":"","sources":["e2e_specg.js"],"sourcesContent":["// * e2e_specg.js\n// * e2e_spec actions array generator\n// * usage exp:\n//   $ node e2e_specg ../logs/2015-09-18/16-00-04.log0 > \n//     ../spec_es6/e2e_spec_2015-09-18-16-00-04.js \n//\n// * @dependencies: ../libs/traceur-runtime, node module fs<br>\n//   @param none<br>\n//\n// * NOTE: The modifier for e2e_spec.js the GMT yr-m-d-hour-min-secs which\n//   identifies the log0-file used to generate the e2e_spec.\n//   (../logs/2015-09-18/16-00-04.log0 for exp.)\n\n\n\"use strict\";\nrequire('../libs/traceur-runtime');\n\nvar fs = require('fs');\nvar args = process.argv.slice(1);\nif(!args[1]){\n  process.exit();\n}\nvar filename = args[1];\n\n// prefab strings\nvar head =  \n`// * e2e_spec.js\n// * tests functions causing state change end-to-end using actions\n//   and expected state-change results:\n//   absolute-urls (all url-components present)\n//   delta-urls (only changed url-components present)\n//   timeline (non-trivial only in the case of Camera3d and Camera2d)\n//\n// * @dependencies: none<br>\n//   @param none<br>\n//\n// * NOTE: The modifier for e2e_spec.js the GMT yr-m-d-hour-min-secs which\n//   identifies the log0-file used to generate the e2e_spec.\n//   (../logs/2015-09-18/16-00-04.log0 for exp.)\n//\n// * NOTE: This file was auto-generated by test/utils/e2e_specg.js\n\n\nvar e2e_spec =  [`;\n\n\nfs.readFile(filename, function(err, data) {\n    if(err){ throw err;}\n    var a = data.toString().split(\",\\n\"),\n        cell = {},\n        i=0,\n        j=0;\n\n    //console.log(`@@@ a.length = ${a.length}`);\n    //console.log(`@@@ a[0] = ${a[0]}`);\n    //console.log(`@@@ a[${a.length-1}] = ${a[a.length-1]}`);\n    if(a[a.length-1].length === 0){\n      //console.log(\"@@@ last element is empty - popping it from array\");\n      a.pop(); // remove last (empty) el\n    }\n    //console.log(`@@@ a.length = ${a.length}`);\n    //console.log(`@@@ a[0] = ${a[0]}`);\n    //console.log(`@@@ a[${a.length-1}] = ${a[a.length-1]}`);\n\n    // generate the e2e_spec-array file\n    console.log(head);\n    for(let e of a) {\n      //console.log(`@@@ TOP i=${i} j=${j}`);\n      if(/^\\{\"t\":/.test(e) || /^\\{\"id\":/.test(e)){\n        cell.action = e;\n      }else{\n        if(/\\/\\//.test(e)){\n          cell.delta_url = e;\n        }else{\n          if(/^\\{\"delta/.test(e) || /{}/.test(e)){\n            cell.shot = e;\n          }else{\n            cell.abs_url = e;\n          }\n        }\n      }\n      // write final tail (j===a.length) or \n      // write close of cell and reset cell for the next cycle\n      if(i===3){\n        if(j===a.length-1){              \n          console.log(`{\"action\": ${cell.action},`);\n          console.log(`\"abs_url\": ${cell.abs_url},`);\n          console.log(`\"delta_url\": ${cell.delta_url},`);\n          console.log(`\"shot\": ${cell.shot}}];`);\n          //console.log(`@@@ fully complete: j=${j}`);\n          process.exit();\n        }else{\n          console.log(`{\"action\": ${cell.action},`);\n          console.log(`\"abs_url\": ${cell.abs_url},`);\n          console.log(`\"delta_url\": ${cell.delta_url},`);\n          console.log(`\"shot\": ${cell.shot}},`);\n          //console.log(`@@@ cell complete: j=${j}`);\n          cell = {};\n        }\n      }\n      i = (i+1)%4;\n      j = j+1;\n    }//for\n});\n"],"file":"e2e_specg.js","sourceRoot":"/source/"}