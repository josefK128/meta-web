"use strict";
"use strict";
require('../libs/traceur-runtime');
var fs = require('fs');
var args = process.argv.slice(1);
if (!args[1]) {
  process.exit();
}
var filename = args[1];
var head = "// * e2e_spec.js\n// * tests functions causing state change end-to-end using actions\n//   and expected state-change results:\n//   absolute-urls (all url-components present)\n//   delta-urls (only changed url-components present)\n//   timeline (non-trivial only in the case of Camera3d and Camera2d)\n//\n// * @dependencies: none<br>\n//   @param none<br>\n//\n// * NOTE: The modifier for e2e_spec.js the GMT yr-m-d-hour-min-secs which\n//   identifies the log0-file used to generate the e2e_spec.\n//   (../logs/2015-09-18/16-00-04.log0 for exp.)\n//\n// * NOTE: This file was auto-generated by test/utils/e2e_specg.js\n\n\nvar e2e_spec =  [";
fs.readFile(filename, function(err, data) {
  if (err) {
    throw err;
  }
  var a = data.toString().split(",\n"),
      cell = {},
      i = 0,
      j = 0;
  if (a[a.length - 1].length === 0) {
    a.pop();
  }
  console.log(head);
  var $__3 = true;
  var $__4 = false;
  var $__5 = undefined;
  try {
    for (var $__1 = void 0,
        $__0 = (a)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__3 = ($__1 = $__0.next()).done); $__3 = true) {
      var e = $__1.value;
      {
        if (/^\{"t":/.test(e) || /^\{"id":/.test(e)) {
          cell.action = e;
        } else {
          if (/\/\//.test(e)) {
            cell.delta_url = e;
          } else {
            if (/^\{"delta/.test(e) || /{}/.test(e)) {
              cell.shot = e;
            } else {
              cell.abs_url = e;
            }
          }
        }
        if (i === 3) {
          if (j === a.length - 1) {
            console.log(("{\"action\": " + cell.action + ","));
            console.log(("\"abs_url\": " + cell.abs_url + ","));
            console.log(("\"delta_url\": " + cell.delta_url + ","));
            console.log(("\"shot\": " + cell.shot + "}];"));
            process.exit();
          } else {
            console.log(("{\"action\": " + cell.action + ","));
            console.log(("\"abs_url\": " + cell.abs_url + ","));
            console.log(("\"delta_url\": " + cell.delta_url + ","));
            console.log(("\"shot\": " + cell.shot + "},"));
            cell = {};
          }
        }
        i = (i + 1) % 4;
        j = j + 1;
      }
    }
  } catch ($__6) {
    $__4 = true;
    $__5 = $__6;
  } finally {
    try {
      if (!$__3 && $__0.return != null) {
        $__0.return();
      }
    } finally {
      if ($__4) {
        throw $__5;
      }
    }
  }
});

//# sourceMappingURL=e2e_specg.js.map