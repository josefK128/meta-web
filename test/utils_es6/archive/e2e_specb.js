// * e2e_specb.js
// * e2e_spec array generator
// * usage exp:
//   $ node e2e_specb ../logs/2015-09-18/16-00-04.log0 > 
//     ../spec_es6/e2e_spec_2015-09-18-16-00-04.js 
//
// * @dependencies: ../libs/traceur-runtime, node module fs<br>
//   @param none<br>
//
// * NOTE: The modifier for e2e_spec.js the GMT yr-m-d-hour-min-secs which
//   identifies the log0-file used to generate the e2e_spec.
//   (../logs/2015-09-18/16-00-04.log0 for exp.)


"use strict";
require('../libs/traceur-runtime');

var fs = require('fs');
var args = process.argv.slice(1);
if(!args[1]){
  process.exit();
}
var filename = args[1];

// prefab strings
var head =  
`// * e2e_spec.js
// * tests functions causing state change end-to-end using actions
//   and expected state-change results:
//   absolute-urls (all url-components present)
//   delta-urls (only changed url-components present)
//   timeline (non-trivial only in the case of Camera3d and Camera2d)
//
// * @dependencies: none<br>
//   @param none<br>
//
// * NOTE: The modifier for e2e_spec.js the GMT yr-m-d-hour-min-secs which
//   identifies the log0-file used to generate the e2e_spec.
//   (../logs/2015-09-18/16-00-04.log0 for exp.)
//
// * NOTE: This file was auto-generated by test/utils/e2e_specb.js


var e2e_spec =  [`;

var tail = `];`;

fs.readFile(filename, function(err, data) {
    if(err){ throw err;}
    var a = data.toString().split(",\n"),
        i=0,
        j=0;

    //console.log(`a.length = ${a.length}`);
    //console.log(`a[0] = ${a[0]}`);
    //console.log(`a[${a.length-1}] = ${a[a.length-1]}`);
    if(a[a.length-1].length === 0){
      a.pop(); // remove last (empty) el
    }
    //console.log(`a.length = ${a.length}`);
    //console.log(`a[0] = ${a[0]}`);
    //console.log(`a[${a.length-1}] = ${a[a.length-1]}`);

    // generate the e2e_spec-array file
    console.log(head);
    for(let e of a) {
      switch(i){
        case 0:
          console.log("{\n'action':" + e);
          break;

        case 1:
          console.log("'abs_url':" + e);
          break;

        case 2:
          console.log("'delta_url':" + e);
          break;

        case 3:
          console.log("'shot':" + e);
          console.log("}");
          break;

        default:
          console.log(`!error writing e = ${e}`);
      }
      i = (i+1)%4;
      j = j+1;
      if(j === a.length){
        console.log(tail);
        break;
      }else{
        //console.log('<'+j+'>,');
        console.log(',');
      }//sw
    }//for
});
